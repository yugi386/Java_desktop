/*
 * CADASTRO DE USUÁRIOS 
 */
package br.webverissimo.cadastro.cadastroTelas;

import br.webverissimo.cadastro.model.DAO.UsuarioDAO;
import br.webverissimo.cadastro.model.MODEL.SuperDTO;
import br.webverissimo.cadastro.model.MODEL.SuperModel;
import br.webverissimo.cadastro.model.MODEL.Validar;
import br.webverissimo.cadastro.utils.Utilitario;
import br.webverissimo.cadastro.utils.Validacao;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ListModel;
import javax.swing.table.DefaultTableModel;


public class Usuarios extends javax.swing.JFrame {
// public class Usuarios extends JDialog {   -- no caso de formulari modal.

    String Erros;
    
    public Usuarios() {
        initComponents();
         inicializa();
    }

    // caixa de dialogo modal...
    /*
    public Usuarios(Frame frame, boolean modal) {
        super(frame,modal);
        initComponents();
         inicializa();
    }
*/
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLCodigo = new javax.swing.JLabel();
        jLDescricao = new javax.swing.JLabel();
        jTCodigo = new javax.swing.JTextField();
        jTNome = new javax.swing.JTextField();
        jBInserir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCargos = new javax.swing.JTable();
        jBAlterar = new javax.swing.JButton();
        jBExcluir = new javax.swing.JButton();
        jBNovo = new javax.swing.JButton();
        jLDescricao1 = new javax.swing.JLabel();
        jTLogin = new javax.swing.JTextField();
        jLDescricao2 = new javax.swing.JLabel();
        jLDescricao3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTDataNascimento = new javax.swing.JTextField();
        jCSexo = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTSalario = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTEmail = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jTObs = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jComboCargos = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jLDepartamentos = new javax.swing.JList();
        jBAlterarDep = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jLDepartamentosIncluir = new javax.swing.JList();
        jBLimpar = new javax.swing.JButton();
        jPSenha = new javax.swing.JPasswordField();
        jPSenhaC = new javax.swing.JPasswordField();
        jPMensagem = new javax.swing.JPanel();
        jLMensagem = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPBusca = new javax.swing.JPanel();
        jLCodigoBusca = new javax.swing.JLabel();
        jTCodigoBusca = new javax.swing.JTextField();
        jBusca = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemSair = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gerenciamento de Usuários");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Conteúdo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N

        jLCodigo.setText("Codigo");

        jLDescricao.setText("Nome");

        jBInserir.setText("INSERIR");
        jBInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBInserirActionPerformed(evt);
            }
        });

        jTableCargos.setAutoCreateRowSorter(true);
        jTableCargos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableCargos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(jTableCargos);

        jBAlterar.setText("ALTERAR");
        jBAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlterarActionPerformed(evt);
            }
        });

        jBExcluir.setText("EXCLUIR");
        jBExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirActionPerformed(evt);
            }
        });

        jBNovo.setText("NOVO");
        jBNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNovoActionPerformed(evt);
            }
        });

        jLDescricao1.setText("Login");

        jLDescricao2.setText("Senha");

        jLDescricao3.setText("Confirma");

        jLabel1.setText("Data Nasc.:");

        jCSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Masculino", "Feminino" }));

        jLabel2.setText("Sexo:");

        jLabel3.setText("Salário:");

        jLabel4.setText("E-mail:");

        jLabel5.setText("Ativo:");

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Sim");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Não");

        jLabel6.setText("OBS:");

        jLabel7.setText("CargoID:");

        jComboCargos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3" }));

        jLabel8.setText("Departamentos:");

        jLDepartamentos.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jLDepartamentos);

        jBAlterarDep.setText("Alterar");
        jBAlterarDep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlterarDepActionPerformed(evt);
            }
        });

        jLDepartamentosIncluir.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jLDepartamentosIncluir);

        jBLimpar.setText("Limpar");
        jBLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLDescricao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTNome, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLCodigo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLDescricao1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLDescricao2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTEmail)
                                    .addComponent(jTObs)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jCSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboCargos, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLDescricao3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jPSenhaC))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel5))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTSalario)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jRadioButton1)
                                            .addGap(18, 18, 18)
                                            .addComponent(jRadioButton2)
                                            .addGap(0, 0, Short.MAX_VALUE)))))))
                    .addComponent(jLabel8)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jBAlterarDep, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBLimpar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jBInserir, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jBAlterar)
                            .addGap(18, 18, 18)
                            .addComponent(jBExcluir)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jBNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(72, 72, 72))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLCodigo, jLDescricao});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBAlterar, jBExcluir, jBInserir});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLDescricao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLDescricao1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLDescricao2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLDescricao3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPSenhaC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jTSalario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTObs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jComboCargos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBInserir)
                            .addComponent(jBAlterar)
                            .addComponent(jBExcluir)
                            .addComponent(jBNovo))
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jBAlterarDep)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBLimpar)
                        .addGap(164, 164, 164)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPMensagemLayout = new javax.swing.GroupLayout(jPMensagem);
        jPMensagem.setLayout(jPMensagemLayout);
        jPMensagemLayout.setHorizontalGroup(
            jPMensagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPMensagemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLMensagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPMensagemLayout.setVerticalGroup(
            jPMensagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPMensagemLayout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jLMensagem))
        );

        jPBusca.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisa", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N

        jLCodigoBusca.setText("Código.:");

        jBusca.setText("Buscar");
        jBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBuscaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPBuscaLayout = new javax.swing.GroupLayout(jPBusca);
        jPBusca.setLayout(jPBuscaLayout);
        jPBuscaLayout.setHorizontalGroup(
            jPBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBuscaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLCodigoBusca)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTCodigoBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBusca)
                .addContainerGap(270, Short.MAX_VALUE))
        );
        jPBuscaLayout.setVerticalGroup(
            jPBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBuscaLayout.createSequentialGroup()
                .addGroup(jPBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLCodigoBusca)
                    .addComponent(jTCodigoBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBusca))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 517, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 86, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(7, 7, 7)
                    .addComponent(jPBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(16, Short.MAX_VALUE)))
        );

        jMenu1.setText("Opções");

        jMenuItemSair.setText("Sair");
        jMenuItemSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSairActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemSair);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPMensagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPMensagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-609)/2, (screenSize.height-759)/2, 609, 759);
    }// </editor-fold>//GEN-END:initComponents
// ----------------------------------------------------------------------------------------------    
    // Metodo para fechar a janela...
    private void jMenuItemSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSairActionPerformed
        dispose();
    }//GEN-LAST:event_jMenuItemSairActionPerformed
// ----------------------------------------------------------------------------------------------    
    // Interface para inserir novo registro
    private void jBInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBInserirActionPerformed
        jLMensagem.setText("");
        UsuarioDAO usuario = new UsuarioDAO();
        if (jTNome.getText().length() < 0) {
            jLMensagem.setText("O campo Nome deve ter mais que 3 caracteres.");
        } else {
            try {
                SuperDTO usu = new SuperDTO();
                usu = usuario.gravar(preencherSuperDTO());
                if (usu == null){
                    jLMensagem.setText("Existem erros nos dados! - " + Erros);
                } else {    
                    jLMensagem.setText("Registro GRAVADO com sucesso!");
                    inicializa();
                }
            } catch (SQLException ex) {
                Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_jBInserirActionPerformed
// ----------------------------------------------------------------------------------------------    
    // interface para busca de registro...
    private void jBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBuscaActionPerformed

        try {
            mostrarDados();
            if (!Validacao.isNaN(jTCodigoBusca.getText())) {
                jLMensagem.setText("O campo CÓDIGO deve ser um número.");
                return;
            }
            UsuarioDAO usuarioDAO = new UsuarioDAO();
            List<Map<String , String>> usuario  = new ArrayList<Map<String,String>>();
            
            usuario = usuarioDAO.listar("id=" + jTCodigoBusca.getText());

            if (usuario == null) {
                jLMensagem.setText("Registro não encontrado !!!!");
                inicializa();
            } else {
                // método para preencher o formulario com dados vindos do banco.
               preencherFormulario(usuario);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBuscaActionPerformed
// ----------------------------------------------------------------------------------------------    
    // interface para alteracao de registro. OK!!!
    private void jBAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlterarActionPerformed
        jLMensagem.setText("");
        UsuarioDAO usuario = new UsuarioDAO();
        if (jTNome.getText().length() < 3) {
            jLMensagem.setText("O campo Nome deve ter mais que 3 caracteres.");
        } else {
            try {
                SuperDTO usu = new SuperDTO();
                usu = usuario.gravar(preencherSuperDTO());
                if (usu == null){
                    jLMensagem.setText("Existem erros nos dados! - " + Erros);
                } else {    
                    jLMensagem.setText("Registro GRAVADO com sucesso!");
                    inicializa();
                }
            } catch (SQLException ex) {
                Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jBAlterarActionPerformed

// ----------------------------------------------------------------------------------------------    
// interface para exclusao de registro. OK!!!
    private void jBExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirActionPerformed
        jLMensagem.setText("");
        UsuarioDAO usuario = new UsuarioDAO();
        
        if (Utilitario.isEmpty(jTCodigoBusca.getText())) {
            jLMensagem.setText("É Preciso selecionar um registro!");
        } else {
            try {
                usuario.excluir(preencherSuperDTO());
                jLMensagem.setText("Registro excluido com sucesso!");
            } catch (SQLException ex) {
                jLMensagem.setText("Não foi possivel excluir o registro!" + ex.getSQLState());
                Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        inicializa();
    }//GEN-LAST:event_jBExcluirActionPerformed

    private void jBNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNovoActionPerformed
        inicializa();
    }//GEN-LAST:event_jBNovoActionPerformed

    private void jBAlterarDepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlterarDepActionPerformed
       adicionaDepartamentos();
    }//GEN-LAST:event_jBAlterarDepActionPerformed

   // Limpando os departamentos do usuario...
    private void jBLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimparActionPerformed
        limparDepartamentosUsuarios();
    }//GEN-LAST:event_jBLimparActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Usuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Usuarios().setVisible(true); // chamada normal
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton jBAlterar;
    private javax.swing.JButton jBAlterarDep;
    private javax.swing.JButton jBExcluir;
    private javax.swing.JButton jBInserir;
    private javax.swing.JButton jBLimpar;
    private javax.swing.JButton jBNovo;
    private javax.swing.JButton jBusca;
    private javax.swing.JComboBox jCSexo;
    private javax.swing.JComboBox jComboCargos;
    private javax.swing.JLabel jLCodigo;
    private javax.swing.JLabel jLCodigoBusca;
    private javax.swing.JList jLDepartamentos;
    private javax.swing.JList jLDepartamentosIncluir;
    private javax.swing.JLabel jLDescricao;
    private javax.swing.JLabel jLDescricao1;
    private javax.swing.JLabel jLDescricao2;
    private javax.swing.JLabel jLDescricao3;
    private javax.swing.JLabel jLMensagem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemSair;
    private javax.swing.JPanel jPBusca;
    private javax.swing.JPanel jPMensagem;
    private javax.swing.JPasswordField jPSenha;
    private javax.swing.JPasswordField jPSenhaC;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTCodigo;
    private javax.swing.JTextField jTCodigoBusca;
    private javax.swing.JTextField jTDataNascimento;
    private javax.swing.JTextField jTEmail;
    private javax.swing.JTextField jTLogin;
    private javax.swing.JTextField jTNome;
    private javax.swing.JTextField jTObs;
    private javax.swing.JTextField jTSalario;
    private javax.swing.JTable jTableCargos;
    // End of variables declaration//GEN-END:variables

// --------------------------------------------------------------------------------------
// Lê os campos do formulario e passa para o DTO.
    @SuppressWarnings({"empty-statement", "empty-statement"})
    private SuperDTO preencherSuperDTO() throws SQLException {
        
        // Lendo dados do Formulário: ****************************
        
        String codigo = jTCodigo.getText();
        if (jTCodigo.getText().trim().length() == 0) {
            codigo = "0";
        }
        String nome = jTNome.getText();
        String login = jTLogin.getText();
        String senha = String.valueOf(jPSenha.getPassword());
        String senha2 = String.valueOf(jPSenhaC.getPassword());
        String data = jTDataNascimento.getText();
        String salario = jTSalario.getText();
        String email = jTEmail.getText();
        String obs = jTObs.getText();
        
        // Sexo:
        String sexo;
        if (jCSexo.getSelectedItem().toString().equals("Masculino")){
            sexo = "M";
        } else {
            sexo = "F";
        }
        
        // Usuario ativo ou nao...
        String ativo = "1";
        if (jRadioButton1.isSelected()) {
            ativo = "1";
        } else {    
            ativo = "0";
        }
        
        // ****************************************************
        // VALIDAÇÕES DE CAMPOS:
        
        Erros = Validar.ValidarTamanho(nome, 3,0,"Nome deve ter ao menos 3 caracteres!"); if (Erros != null) { return null; }
        Erros = Validar.ValidarVazio(senha, "Senha não pode ser vazia!"); if (Erros != null) { return null; }
        Erros = Validar.ValidarComparar(senha, senha2,"As senhas não conferem!"); if (Erros != null) { return null; }
        Erros = Validar.ValidarNumero(salario, 0,10000,"Salário deve estar entre 0 e 10.000!"); if (Erros != null) { return null; }
        Erros = Validar.ValidarEmail(email,"E-mail Inválido!"); if (Erros != null) { return null; }
        Erros = Validar.ValidarData(data,"Data Inválida!"); if (Erros != null) { return null; }
        
        // Cargo do Usuário...
        String cargo_id="";
        SuperModel modelo = new SuperModel();
        String[] cp = {"id","descricao"};
        ResultSet lista = (ResultSet) modelo.list("cargos", cp ,"descricao='"+jComboCargos.getSelectedItem().toString()+"'");
        while (lista.next()){
            cargo_id = lista.getString("id");
           // System.out.println(cargo_id);
        };
        
        //  Lendo os departamento para alterar           
        ListModel itens = jLDepartamentosIncluir.getModel();
        String[] departamentos = new String[itens.getSize()];  
        for(int i = 0; i<itens.getSize();i++){  
            departamentos[i] = (String) itens.getElementAt(i);  
            // System.out.println(departamentos[i]);  
        }  
        
        // Preenchendo SuperDTO: TODAS AS INFORMAÇÕES AQUI ****************************
        
        // Primeiro os campos normais da tabela...
        String campos[] = {"id","nome","login","senha","dataNascimento","sexo",
             "salario","email","observacao","ativo","cargo_id"};
 
        //  Convertendo a data para formato de gravação no banco.
        data = Validar.DataBanco(data);
        
        String valores[] = {codigo, nome, login, senha, data, sexo, 
              salario, email, obs, ativo, cargo_id};
        
        SuperDTO usuario = new SuperDTO();
        usuario.setAtrib(campos,valores);   //  atrib = campos da tabela principal
        
        // Depois o relacionamento de N para N.
        // Preenchendo departamentos o que usuario fará parte:
        String[] camposDepartamentos = {"usuarios_id","departamentos_id"};        
        for (int ct=0;ct<departamentos.length;ct++){
            String[] dep = new String[2];
            dep[0] = codigo;    //  usuario_id
            // cp = {"id","descricao"};
            lista = (ResultSet) modelo.list("departamentos", cp ,"descricao='"+departamentos[ct]+"'");
            while (lista.next()){
                dep[1] = lista.getString("id");  //  departamento_id
            };
            usuario.setRelC(camposDepartamentos,dep);   //  relC = campos da tabela associada N para N
        }
        
        // retornamos aqui o superDTO
        return usuario;
    }

// --------------------------------------------------------------------------------------
// Limpa o formulario e mostra registro gravados na tabela...
    private void inicializa() {
        try {
            jTCodigoBusca.setText("");
            jTCodigo.setText("0");
            jTCodigo.setEnabled(false);
            jTNome.setText("");
            jTNome.requestFocus();
            jTLogin.setText("");
            jPSenha.setText("");
            jPSenhaC.setText("");
            jTDataNascimento.setText("");
            jTSalario.setText("");
            jTEmail.setText("");
            jTObs.setText("");
            jRadioButton1.isSelected(); //  ativo
            
            limparDepartamentosUsuarios();
            carregarCargos();
            carregarDepartamentos();
            mostrarDados();
            
        } catch (Exception ex) {
            Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex.getMessage());
        }
    }

// ==========================================================================================================    
    // mostra os dados na tabela do formulario...
    private void mostrarDados() throws SQLException {
        
        UsuarioDAO usuarioDAO = new UsuarioDAO();
        List<Map<String , String>> usuario  = new ArrayList<Map<String,String>>();
        usuario = usuarioDAO.listar("");
         
        DefaultTableModel model = new DefaultTableModel();
        jTableCargos.addRowSelectionInterval(0, 1);
        jTableCargos.setModel(model);
        model.addColumn("Codigo");
        model.addColumn("nome");
        model.addColumn("Login");
        model.addColumn("Data Nascimento");
        model.addColumn("Sexo");
        model.addColumn("Salario");
        model.addColumn("E-mail");
        model.addColumn("Ativo");
        model.addColumn("Observação");
        model.addColumn("Cargo");
        
        int coluna = 0;
         for (int ct=0;ct<usuario.size();ct++){
              model.insertRow(coluna, new Object[]{
                 usuario.get(ct).get("id"),
                 usuario.get(ct).get("nome"),
                 usuario.get(ct).get("login"),
                 usuario.get(ct).get("dataNascimento"),
                 usuario.get(ct).get("sexo"),
                 usuario.get(ct).get("salario"),
                 usuario.get(ct).get("email"),
                 usuario.get(ct).get("ativo"),
                 usuario.get(ct).get("observacao"),
                 usuario.get(ct).get("cargo_id")
             });
             coluna++;
             
           // System.out.println(usuario.get(ct).get("nome"));
             
         }
    }
// ==========================================================================================================    
//  Carrega todos os cargos disponiveis ...
    private void carregarCargos() throws SQLException {
        SuperModel modelo = new SuperModel();
        String[] campos = {"descricao"};
        
        ResultSet lista = (ResultSet) modelo.list("cargos", campos ,"");
        jComboCargos.removeAllItems();

        while (lista.next()){
            jComboCargos.addItem(lista.getString("descricao"));
        }
    }    
// ==========================================================================================================    
// Carrega todos os departamentos disponíveis...    
    private void carregarDepartamentos() throws SQLException {
        SuperModel modelo = new SuperModel();
        String[] campos = {"descricao"};
        
        ResultSet lista = (ResultSet) modelo.list("departamentos", campos ,"");
        jLDepartamentos.removeAll();

       DefaultListModel adlista = new DefaultListModel();
               
        while (lista.next()){
            adlista.addElement(lista.getString("descricao"));
        }
        jLDepartamentos.setModel(adlista);
    }        
    
// =============================================================================================    
    private void preencherFormulario(List<Map<String, String>> usuario) throws SQLException {
            // Preenche um registro...
            Map<String, String> registro = usuario.get(0);
        
            jTCodigo.setText(registro.get("id"));
            jTNome.setText(registro.get("nome"));
            jTNome.requestFocus();
            jLMensagem.setText("");
            jTLogin.setText(registro.get("login"));
            jPSenha.setText(registro.get("senha"));
            jTDataNascimento.setText(Validar.DataFormulario(registro.get("dataNascimento")));
            jTSalario.setText(registro.get("salario"));
            jTEmail.setText(registro.get("email"));
            jTObs.setText(registro.get("observacao"));

            // Preenchendo Ativo...
            if (registro.get("ativo").equals("1")){
                jRadioButton1.getModel().setSelected(true);
                jRadioButton2.getModel().setSelected(false);
            } else {
                jRadioButton2.getModel().setSelected(true);
                jRadioButton1.getModel().setSelected(false);
            } 

            // Preenchendo Campo Sexo...
            if (registro.get("sexo").equals("M")){
                jCSexo.getModel().setSelectedItem("Masculino");
            }else {
                jCSexo.getModel().setSelectedItem("Feminino");
            }

            // Preenchendo cargo do usuario:
            UsuarioDAO usuarioDAO = new UsuarioDAO();
            //usuario = usuarioDAO.listarCargo("id="+registro.get("cargo_id"));
            String[] tabCampo = {"id","descricao"};
            usuario = usuarioDAO.listarTabelasAssociadas("cargos",tabCampo,"id="+registro.get("cargo_id"));
                    
            jComboCargos.setSelectedItem(usuario.get(0).get("descricao"));

            // Carregando os departamentos do usuario.
            carregarDepartamentosUsuario("usuarios_id="+registro.get("id"));
            
            jLMensagem.setText("");
            jTNome.requestFocus();
            
            //System.out.println(registro.get("cargo_id"));           
            //System.out.println(usuario.get(0).get("descricao"));           
    }
// ======================================================================================    
// carrega todos os departamentos do usuario informado na condicao.    
 private void carregarDepartamentosUsuario(String condicao) throws SQLException {
    UsuarioDAO usuario = new UsuarioDAO();

    List<Map<String , String>> registros  = new ArrayList<Map<String,String>>();
    List<Map<String , String>> departamentos  = new ArrayList<Map<String,String>>();
    // registros = usuario.listarDepartamentos(condicao);
    
    // listando departamentos dos usuarios...
    // System.out.println(condicao); 
    
    // a variavel registros fornece alista com os departamentos do usuario
    String[] tabCampo = {"usuarios_id","departamentos_id"};
    registros = usuario.listarTabelasAssociadas("departamentos_usuarios",tabCampo,condicao);
         
    if (registros != null){
           // Modelo da lista
           DefaultListModel lista = new DefaultListModel();
           UsuarioDAO usuarioDAO = new UsuarioDAO();
           String[] tabCampo2 = {"id","descricao"};   // campos da tabela departamentos...
                   
           try {
               jLDepartamentosIncluir.clearSelection();
               for(int ct=0;ct<registros.size();ct++) {
                   // lista.addElement(registros.get(ct).get("departamentos_id"));
                   departamentos = usuario.listarTabelasAssociadas("departamentos",tabCampo2,"id="+registros.get(ct).get("departamentos_id"));

                   // departamentos = usuarioDAO.listarDep("id="+registros.get(ct).get("departamentos_id"));
                   lista.addElement(departamentos.get(0).get("descricao"));

               }
               jLDepartamentosIncluir.setModel(lista);

           } catch (Exception ex) {
               Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex.getMessage());
           }
    } else {
        limparDepartamentosUsuarios();
    }
 }    
// ======================================================================================        
 // Limpa os departamentos selecionados no campo jLDepartamentosIncluir
    private void limparDepartamentosUsuarios() {
        DefaultListModel model = new DefaultListModel();
        jLDepartamentosIncluir.getModel();
        model.clear();
        jLDepartamentosIncluir.setModel(model);
    }    
    
// ======================================================================================            
// Adicionando departamentos...    
 private void adicionaDepartamentos() {
        jLDepartamentosIncluir.setListData(jLDepartamentos.getSelectedValues());
    }    
 }