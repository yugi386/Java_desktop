/*
 * CADASTRO DE CLIENTES
 */
package br.webverissimo.cadastro.cadastroTelas;

import br.webverissimo.cadastro.model.DAO.ClienteDAO;
import br.webverissimo.cadastro.model.MODEL.SuperDTO;
import br.webverissimo.cadastro.model.MODEL.SuperModel;
import br.webverissimo.cadastro.model.MODEL.Validar;
import br.webverissimo.cadastro.utils.Utilitario;
import br.webverissimo.cadastro.utils.Validacao;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ListModel;
import javax.swing.table.DefaultTableModel;


public class Clientes extends javax.swing.JFrame {
// public class Usuarios extends JDialog {   -- no caso de formulari modal.

    String Erros;
    
    public Clientes() {
        initComponents();
         inicializa();
    }

    // caixa de dialogo modal...
    /*
    public Clientes(Frame frame, boolean modal) {
        super(frame,modal);
        initComponents();
         inicializa();
    }
*/
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLCodigo = new javax.swing.JLabel();
        jLDescricao = new javax.swing.JLabel();
        jTCodigo = new javax.swing.JTextField();
        jTNome = new javax.swing.JTextField();
        jBInserir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableClientes = new javax.swing.JTable();
        jBAlterar = new javax.swing.JButton();
        jBExcluir = new javax.swing.JButton();
        jBNovo = new javax.swing.JButton();
        jLDescricao1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jComboEstados = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jLRepresentantes = new javax.swing.JList();
        jBAlterarRepresentante = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jLRepresentantesIncluir = new javax.swing.JList();
        jBLimparRepresentante = new javax.swing.JButton();
        jTTelefone = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTLimiteCredito = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTDataUltimaCompra = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTRG = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTCPF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTObs = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTRua = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTBairro = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTCidade = new javax.swing.JTextField();
        jPMensagem = new javax.swing.JPanel();
        jLMensagem = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPBusca = new javax.swing.JPanel();
        jLCodigoBusca = new javax.swing.JLabel();
        jTCodigoBusca = new javax.swing.JTextField();
        jBusca = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemSair = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gerenciamento de Clientes");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Conteúdo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N

        jLCodigo.setText("Codigo");

        jLDescricao.setText("Nome");

        jBInserir.setText("INSERIR");
        jBInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBInserirActionPerformed(evt);
            }
        });

        jTableClientes.setAutoCreateRowSorter(true);
        jTableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableClientes.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(jTableClientes);

        jBAlterar.setText("ALTERAR");
        jBAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlterarActionPerformed(evt);
            }
        });

        jBExcluir.setText("EXCLUIR");
        jBExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirActionPerformed(evt);
            }
        });

        jBNovo.setText("NOVO");
        jBNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNovoActionPerformed(evt);
            }
        });

        jLDescricao1.setText("Telefone:");

        jLabel5.setText("Ativo:");

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Sim");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Não");

        jLabel7.setText("Estado");

        jComboEstados.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3" }));

        jLabel8.setText("Representantes");

        jLRepresentantes.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jLRepresentantes);

        jBAlterarRepresentante.setText("Alterar");
        jBAlterarRepresentante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlterarRepresentanteActionPerformed(evt);
            }
        });

        jLRepresentantesIncluir.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jLRepresentantesIncluir);

        jBLimparRepresentante.setText("Limpar");
        jBLimparRepresentante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimparRepresentanteActionPerformed(evt);
            }
        });

        jLabel1.setText("Limite Crédito");

        jLabel2.setText("Data última Compra:");

        jLabel3.setText("RG:");

        jLabel4.setText("CPF:");

        jLabel6.setText("Obs:");

        jLabel9.setText("Rua:");

        jLabel10.setText("Bairro:");

        jLabel11.setText("Cidade:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLDescricao1)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTLimiteCredito, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel8)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(40, 40, 40)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jBAlterarRepresentante, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBLimparRepresentante, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jBInserir, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jBAlterar)
                            .addGap(18, 18, 18)
                            .addComponent(jBExcluir)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jBNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(72, 100, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLDescricao)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTNome, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLCodigo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTRua))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTCPF))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTDataUltimaCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTRG, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTObs, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel10))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTBairro)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jRadioButton1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jRadioButton2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jComboEstados, 0, 128, Short.MAX_VALUE)))))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLCodigo, jLDescricao});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jBAlterar, jBExcluir, jBInserir});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLDescricao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLDescricao1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel1)
                                        .addComponent(jTLimiteCredito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jTDataUltimaCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(jTRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)
                                    .addComponent(jTObs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jTBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addComponent(jLabel11)
                    .addComponent(jTCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jComboEstados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                        .addComponent(jBAlterarRepresentante)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBLimparRepresentante)
                        .addGap(29, 29, 29))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBInserir)
                    .addComponent(jBAlterar)
                    .addComponent(jBExcluir)
                    .addComponent(jBNovo))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPMensagemLayout = new javax.swing.GroupLayout(jPMensagem);
        jPMensagem.setLayout(jPMensagemLayout);
        jPMensagemLayout.setHorizontalGroup(
            jPMensagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPMensagemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLMensagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPMensagemLayout.setVerticalGroup(
            jPMensagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPMensagemLayout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jLMensagem))
        );

        jPBusca.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pesquisa", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N

        jLCodigoBusca.setText("Código.:");

        jBusca.setText("Buscar");
        jBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBuscaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPBuscaLayout = new javax.swing.GroupLayout(jPBusca);
        jPBusca.setLayout(jPBuscaLayout);
        jPBuscaLayout.setHorizontalGroup(
            jPBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBuscaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLCodigoBusca)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTCodigoBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jBusca)
                .addContainerGap(270, Short.MAX_VALUE))
        );
        jPBuscaLayout.setVerticalGroup(
            jPBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPBuscaLayout.createSequentialGroup()
                .addGroup(jPBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLCodigoBusca)
                    .addComponent(jTCodigoBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBusca))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 517, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 86, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(7, 7, 7)
                    .addComponent(jPBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(16, Short.MAX_VALUE)))
        );

        jMenu1.setText("Opções");

        jMenuItemSair.setText("Sair");
        jMenuItemSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSairActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemSair);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPMensagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPMensagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-609)/2, (screenSize.height-759)/2, 609, 759);
    }// </editor-fold>//GEN-END:initComponents
// ----------------------------------------------------------------------------------------------    
    // Metodo para fechar a janela...
    private void jMenuItemSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSairActionPerformed
        dispose();
    }//GEN-LAST:event_jMenuItemSairActionPerformed
// ----------------------------------------------------------------------------------------------    
    // Interface para inserir novo registro
    private void jBInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBInserirActionPerformed
        jLMensagem.setText("");
        ClienteDAO cliente = new ClienteDAO();
        if (jTNome.getText().length() < 3) {
            jLMensagem.setText("O campo Nome deve ter mais que 3 caracteres.");
        } else {
            try {
                SuperDTO cli = new SuperDTO();
                cli = cliente.gravar(preencherSuperDTO());
                if (cli == null){
                    jLMensagem.setText("Existem erros nos dados! - " + Erros);
                } else {    
                    jLMensagem.setText("Registro GRAVADO com sucesso!");
                    inicializa();
                }
            } catch (SQLException ex) {
                Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_jBInserirActionPerformed
// ----------------------------------------------------------------------------------------------    
    // interface para busca de registro...
    private void jBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBuscaActionPerformed

        try {
            mostrarDados();
            if (!Validacao.isNaN(jTCodigoBusca.getText())) {
                jLMensagem.setText("O campo CÓDIGO deve ser um número.");
                return;
            }
            ClienteDAO cli = new ClienteDAO();
            List<Map<String , String>> cliente  = new ArrayList<Map<String,String>>();
            
            cliente = cli.listar("id=" + jTCodigoBusca.getText());

            if (cliente == null) {
                jLMensagem.setText("Registro não encontrado !!!!");
                inicializa();
            } else {
                // método para preencher o formulario com dados vindos do banco.
               preencherFormulario(cliente);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBuscaActionPerformed
// ----------------------------------------------------------------------------------------------    
    // interface para alteracao de registro. OK!!!
    private void jBAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlterarActionPerformed
        jLMensagem.setText("");
        ClienteDAO cliente = new ClienteDAO();
        if (jTNome.getText().length() < 3) {
            jLMensagem.setText("O campo Nome deve ter mais que 3 caracteres.");
        } else {
            try {
                SuperDTO cli = new SuperDTO();
                cli = cliente.gravar(preencherSuperDTO());
                if (cli == null){
                    jLMensagem.setText("Existem erros nos dados! - " + Erros);
                } else {    
                    jLMensagem.setText("Registro GRAVADO com sucesso!");
                    inicializa();
                }
            } catch (SQLException ex) {
                Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jBAlterarActionPerformed

// ----------------------------------------------------------------------------------------------    
// interface para exclusao de registro. OK!!!
    private void jBExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirActionPerformed
        jLMensagem.setText("");
        ClienteDAO cliente = new ClienteDAO();
        
        if (Utilitario.isEmpty(jTCodigoBusca.getText())) {
            jLMensagem.setText("É Preciso selecionar um registro!");
        } else {
            try {
                cliente.excluir(preencherSuperDTO());
                jLMensagem.setText("Registro excluido com sucesso!");
            } catch (SQLException ex) {
                jLMensagem.setText("Não foi possivel excluir o registro!" + ex.getSQLState());
                Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        inicializa();
    }//GEN-LAST:event_jBExcluirActionPerformed

    private void jBNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNovoActionPerformed
        inicializa();
    }//GEN-LAST:event_jBNovoActionPerformed

    private void jBAlterarRepresentanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlterarRepresentanteActionPerformed
       adicionaRepresentantes();
    }//GEN-LAST:event_jBAlterarRepresentanteActionPerformed

   // Limpando os departamentos do cliente...
    private void jBLimparRepresentanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimparRepresentanteActionPerformed
        limparRepresentantesClientes();
    }//GEN-LAST:event_jBLimparRepresentanteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Clientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Clientes().setVisible(true); // chamada normal
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton jBAlterar;
    private javax.swing.JButton jBAlterarRepresentante;
    private javax.swing.JButton jBExcluir;
    private javax.swing.JButton jBInserir;
    private javax.swing.JButton jBLimparRepresentante;
    private javax.swing.JButton jBNovo;
    private javax.swing.JButton jBusca;
    private javax.swing.JComboBox jComboEstados;
    private javax.swing.JLabel jLCodigo;
    private javax.swing.JLabel jLCodigoBusca;
    private javax.swing.JLabel jLDescricao;
    private javax.swing.JLabel jLDescricao1;
    private javax.swing.JLabel jLMensagem;
    private javax.swing.JList jLRepresentantes;
    private javax.swing.JList jLRepresentantesIncluir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemSair;
    private javax.swing.JPanel jPBusca;
    private javax.swing.JPanel jPMensagem;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTBairro;
    private javax.swing.JTextField jTCPF;
    private javax.swing.JTextField jTCidade;
    private javax.swing.JTextField jTCodigo;
    private javax.swing.JTextField jTCodigoBusca;
    private javax.swing.JTextField jTDataUltimaCompra;
    private javax.swing.JTextField jTLimiteCredito;
    private javax.swing.JTextField jTNome;
    private javax.swing.JTextField jTObs;
    private javax.swing.JTextField jTRG;
    private javax.swing.JTextField jTRua;
    private javax.swing.JTextField jTTelefone;
    private javax.swing.JTable jTableClientes;
    // End of variables declaration//GEN-END:variables

// --------------------------------------------------------------------------------------
// Lê os campos do formulario e passa para o DTO.
    @SuppressWarnings({"empty-statement", "empty-statement"})
    private SuperDTO preencherSuperDTO() throws SQLException {
        
        // Lendo dados do Formulário: ****************************
        
        String codigo = jTCodigo.getText();
        if (jTCodigo.getText().trim().length() == 0) {
            codigo = "0";
        }
        String nome = jTNome.getText();
        String telefone = jTTelefone.getText();
        String limiteCredito = jTLimiteCredito.getText();
        String dataUltimaCompra = jTDataUltimaCompra.getText();
        String rg = jTRG.getText();
        String cpf = jTCPF.getText();
        String rua = jTRua.getText();
        String bairro = jTBairro.getText();
        String cidade = jTCidade.getText();
        String obs = jTObs.getText();
        
        // Usuario ativo ou nao...
        String ativo = "1";
        if (jRadioButton1.isSelected()) {
            ativo = "1";
        } else {    
            ativo = "0";
        }
        
        // Validacoes: ***************** necessita de controle especial...
        Erros = Validar.ValidarTamanho(nome, 3,0,"Nome deve ter ao menos 3 caracteres!"); if (Erros != null) { return null; }
        Erros = Validar.ValidarNumero(limiteCredito,"Limite de Crédito deve ser um número!"); if (Erros != null) { return null; }
        Erros = Validar.ValidarData(dataUltimaCompra,"Data Inválida!"); if (Erros != null) { return null; }
        Erros = Validar.ValidarVazio(cpf, "CPF não pode ser vazio!"); if (Erros != null) { return null; }
        Erros = Validar.ValidarVazio(rg, "RG não pode ser vazio!"); if (Erros != null) { return null; }
        
        // estado do cliente...
        String estado_id="";
        SuperModel modelo = new SuperModel();
        String[] cp = {"id","descricao"};
        ResultSet lista = (ResultSet) modelo.list("estados", cp ,"descricao='"+jComboEstados.getSelectedItem().toString()+"'");
        while (lista.next()){
            estado_id = lista.getString("id");
           // System.out.println(cargo_id);
        };
        
        //  Lendo os contatos dos funcionários para alterar           
        ListModel itens = jLRepresentantesIncluir.getModel();
        String[] contatos = new String[itens.getSize()];  
        for(int i = 0; i<itens.getSize();i++){  
            contatos[i] = (String) itens.getElementAt(i);  
        }  
        
        // Preenchendo SuperDTO: TODAS AS INFORMAÇÕES AQUI ****************************
        
        // Primeiro os campos normais da tabela...
        String campos[] =  {"id","nome","telefone","limiteCredito","dataultimaCompra","rg",
             "cpf","ativo","observacao","rua","bairro","cidade","estado_id"};
        
        //  Convertendo a data para formato de gravação no banco.
        dataUltimaCompra = Validar.DataBanco(dataUltimaCompra);
        
        String valores[] = {codigo, nome, telefone, limiteCredito, dataUltimaCompra, rg, 
              cpf, ativo, obs, rua, bairro, cidade, estado_id};
        
        SuperDTO cliente = new SuperDTO();
        cliente.setAtrib(campos,valores);   //  atrib = campos da tabela principal
        
        // Depois o relacionamento de N para N.
        // Preenchendo Representantes do cliente
        String[] camposRepresentantes = {"clientes_id","representantes_id"};        
        for (int ct=0;ct<contatos.length;ct++){
            String[] wContato = new String[2];
            wContato[0] = codigo;    //  fornecedor_id
            cp[0] = "id";   //  id do usuario
            cp[1] = "nome"; //  nome do usuário
            
            lista = (ResultSet) modelo.list("usuarios", cp ,"nome='"+contatos[ct]+"'");
            while (lista.next()){
                wContato[1] = lista.getString("id");  //  usuario_id
            };
            cliente.setRelC(camposRepresentantes,wContato);   //  relC = campos da tabela associada N para N
        }
        
        // retornamos aqui o superDTO
        return cliente;
    }

// --------------------------------------------------------------------------------------
// Limpa o formulario e mostra registro gravados na tabela...
    private void inicializa() {
        try {
            jTCodigoBusca.setText("");
            jTCodigo.setText("0");
            jTCodigo.setEnabled(false);
            jTNome.setText("");
            jTNome.requestFocus();
            jTTelefone.setText("");
            jTLimiteCredito.setText("");
            jTDataUltimaCompra.setText("");
            jTRG.setText("");
            jTCPF.setText("");
            jTRua.setText("");
            jTBairro.setText("");
            jTCidade.setText("");
            jTObs.setText("");
            jRadioButton1.isSelected(); //  ativo
            
            limparRepresentantesClientes();
            carregarEstados();
            carregarRepresentantes();
            mostrarDados();
            
        } catch (Exception ex) {
            Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex.getMessage());
        }
    }

// ==========================================================================================================    
    // mostra os dados na tabela do formulario...
    private void mostrarDados() throws SQLException {
        
        ClienteDAO cliDAO = new ClienteDAO();
        List<Map<String , String>> cliente  = new ArrayList<Map<String,String>>();
        cliente = cliDAO.listar("");
         
        DefaultTableModel model = new DefaultTableModel();
        jTableClientes.addRowSelectionInterval(0, 1);
        jTableClientes.setModel(model);
        model.addColumn("Codigo");
        model.addColumn("nome");
        model.addColumn("telefone");
        model.addColumn("Limite Crédito");
        model.addColumn("Data Última Compra");
        model.addColumn("RG");
        model.addColumn("CPF");
        model.addColumn("Ativo");
        model.addColumn("Observações");
        model.addColumn("Rua");
        model.addColumn("Bairro");
        model.addColumn("Cidade");
        model.addColumn("Estado_id");
        
        int coluna = 0;
         for (int ct=0;ct<cliente.size();ct++){
              model.insertRow(coluna, new Object[]{
                 cliente.get(ct).get("id"),
                 cliente.get(ct).get("nome"),
                 cliente.get(ct).get("telefone"),
                 cliente.get(ct).get("limiteCredito"),
                 cliente.get(ct).get("dataultimaCompra"),
                 cliente.get(ct).get("rg"),
                 cliente.get(ct).get("cpf"),
                 cliente.get(ct).get("ativo"),
                 cliente.get(ct).get("observacao"),
                 cliente.get(ct).get("rua"),
                 cliente.get(ct).get("bairro"),
                 cliente.get(ct).get("cidade"),
                 cliente.get(ct).get("estado_id")
             });
             coluna++;
             
         }
    }
// ==========================================================================================================    
//  Carrega todos os estados...
    private void carregarEstados() throws SQLException {
        SuperModel modelo = new SuperModel();
        String[] campos = {"descricao"};
        
        ResultSet lista = (ResultSet) modelo.list("estados", campos ,"");
        jComboEstados.removeAllItems();

        while (lista.next()){
            jComboEstados.addItem(lista.getString("descricao"));
        }
    }    
// ==========================================================================================================    
// Carrega todos os representantes disponíveis...    
    private void carregarRepresentantes() throws SQLException {
        SuperModel modelo = new SuperModel();
        String[] campos = {"nome"};
        
        ResultSet lista = (ResultSet) modelo.list("usuarios", campos ,"");
        jLRepresentantes.removeAll();

       DefaultListModel adlista = new DefaultListModel();
               
        while (lista.next()){
            adlista.addElement(lista.getString("nome"));
        }
        jLRepresentantes.setModel(adlista);
    }        
    
// =============================================================================================    
    private void preencherFormulario(List<Map<String, String>> cliente) throws SQLException {
            // Preenche um registro...
            Map<String, String> registro = cliente.get(0);
        
        /*
         {"id","nome","telefone","limiteCredito","dataultimaCompra","rg",
             "cpf","ativo","observacao","rua","bairro","cidade","estado_id"};
        */
            
            jTCodigo.setText(registro.get("id"));
            jTNome.setText(registro.get("nome"));
            jTNome.requestFocus();
            jLMensagem.setText("");
            jTTelefone.setText(registro.get("telefone"));
            jTLimiteCredito.setText(registro.get("limiteCredito"));
            jTDataUltimaCompra.setText(Validar.DataFormulario(registro.get("dataultimaCompra")));
            jTRG.setText(registro.get("rg"));
            jTCPF.setText(registro.get("cpf"));
            jTRua.setText(registro.get("rua"));
            jTBairro.setText(registro.get("bairro"));
            jTCidade.setText(registro.get("cidade"));
            jTObs.setText(registro.get("observacao"));
            
            // Preenchendo Ativo...
            if (registro.get("ativo").equals("1")){
                jRadioButton1.getModel().setSelected(true);
                jRadioButton2.getModel().setSelected(false);
            } else {
                jRadioButton2.getModel().setSelected(true);
                jRadioButton1.getModel().setSelected(false);
            } 

            // Preenchendo estado do cliente:
            ClienteDAO cli = new ClienteDAO();
            String[] tabCampo = {"id","descricao"};
            cliente = cli.listarTabelasAssociadas("estados",tabCampo,"id="+registro.get("estado_id"));
            jComboEstados.setSelectedItem(cliente.get(0).get("descricao"));

            // Carregando os contatos do cliente.
            carregarRepresentantesCliente("clientes_id="+registro.get("id"));
            
            jLMensagem.setText("");
            jTNome.requestFocus();
            
    }
// ======================================================================================    
// carrega todos os representantes do cliente.
 private void carregarRepresentantesCliente(String condicao) throws SQLException {
    ClienteDAO cliente = new ClienteDAO();

    List<Map<String , String>> registros  = new ArrayList<Map<String,String>>();
    List<Map<String , String>> usuarios  = new ArrayList<Map<String,String>>();
    
    // a variavel registros fornece a lista com os contatos do cliente.
    String[] tabCampo = {"clientes_id","representantes_id"};
    registros = cliente.listarTabelasAssociadas("representantes_clientes",tabCampo,condicao);
         
    if (registros != null){
           // Modelo da lista
           DefaultListModel lista = new DefaultListModel();
           String[] tabCampo2 = {"id","nome"};   // campos da tabela usuarios
                   
           try {
               jLRepresentantesIncluir.clearSelection();
               for(int ct=0;ct<registros.size();ct++) {
                   usuarios = cliente.listarTabelasAssociadas("usuarios",tabCampo2,"id="+registros.get(ct).get("representantes_id"));
                   lista.addElement(usuarios.get(0).get("nome"));
               }
               jLRepresentantesIncluir.setModel(lista);

           } catch (Exception ex) {
               Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex.getMessage());
           }
    } else {
        limparRepresentantesClientes();
    }
 }    
// ======================================================================================        
 // Limpa os contatos do usuario.
    private void limparRepresentantesClientes() {
        DefaultListModel model = new DefaultListModel();
        jLRepresentantesIncluir.getModel();
        model.clear();
        jLRepresentantesIncluir.setModel(model);
    }    
    
// ======================================================================================            
// Adicionando contatos
 private void adicionaRepresentantes() {
        jLRepresentantesIncluir.setListData(jLRepresentantes.getSelectedValues());
    }    
 }